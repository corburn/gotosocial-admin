name: ci

on:
  #schedule:
  #  - cron: '0 10 * * *' # everyday at 10am
  push:
    #branches:
    #  - 'main'
    #  - '**'
    #tags:
    #  - 'v*.*.*'
  #pull_request:
  #  branches:
  #    - 'master'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      - # Tags
        # ----
        # https://github.com/docker/metadata-action#tags-input
        # generate Docker tags based on the following events/attributes
        #
        # type=schedule: will be used on schedule event and output a 'nightly' tag by default.
        # type=semver: will be used on a push tag event and requires a valid semver Git tag (e.g. v1.2.3 or v2.0.8-beta.67).
        # type=match:
        # type=edge: will be used on a push event
        # type=ref:
        # type=raw:
        # type=sha:
        #
        #
        # The 'latest' tag is handled through the 'flavor' input. It will be generated by default (auto mode) for the following tag types:
        #
        #   * type=ref,event=tag
        #   * type=semver,pattern=...
        #   * type=match,pattern=...
        #
        #
        # Labels
        # ------
        # The output 'labels' from the OCI Image Format Specification
        # By default, the metadata-action outputs 
        # https://github.com/opencontainers/image-spec/blob/master/annotations.md
        # 
        #     org.opencontainers.image.title=gotosocial-admin
        #     org.opencontainers.image.description=Admin webapp for GoToSocial
        #     org.opencontainers.image.url=https://github.com/corburn/gotosocial-admin
        #     org.opencontainers.image.source=https://github.com/corburn/gotosocial-admin
        #     org.opencontainers.image.version=sha-cc746da
        #     org.opencontainers.image.created=2021-10-03T14:38:08.778Z
        #     org.opencontainers.image.revision=cc746daf39e217985b6171da8d060d8b77a72573
        #     org.opencontainers.image.licenses=AGPL-3.0
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            docker.io/${{ github.repository }}
            ghcr.io/${{ github.repository }}
          tags: |
            type=schedule,enable=true,priority=1000,prefix=,suffix=,pattern=nightly
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=edge,enable=true,priority=700,prefix=,suffix=,branch=$repo.default_branch
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      # -
      #   name: Login to DockerHub
      #   uses: docker/login-action@v1 
      #   with:
      #     #username: ${{ secrets.DOCKERHUB_USERNAME }}
      #     username: ${{ github.repository_owner }}
      #     password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        run: |
          echo "tags: ${{ join(steps.meta.outputs.tags, ',')}}"
          echo "images: ${{ join(steps.meta.outputs.images, ',')}}"
          echo "labels: ${{ join(steps.meta.outputs.labels, ',')}}"
          echo "args: ${{ join(steps.meta.outputs.args, ',')}}"
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          tags: ${{ steps.meta.outputs.tags }}
          labels: ${{ steps.meta.outputs.labels }}
          # build-args: |
          #   BUILDTIME=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.created'] }}
          #   VERSION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.version'] }}
          #   REVISION=${{ fromJSON(steps.meta.outputs.json).labels['org.opencontainers.image.revision'] }}
          #platforms: linux/amd64,linux/arm64
          # push: true
          # tags: |
          #   user/app:latest
          #   user/app:1.0.0
          #   ghcr.io/user/app:latest
          #   ghcr.io/user/app:1.0.0
      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}
