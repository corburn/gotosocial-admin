name: ci

on:
  #schedule:
  #  - cron: '0 10 * * *' # everyday at 10am
  push:
    #branches:
    #  - 'main'
    #  - '**'
    tags:
      - 'v*.*.*'
  #pull_request:
  #  branches:
  #    - 'master'

jobs:
  docker:
    runs-on: ubuntu-latest
    steps:
      -
        name: Checkout
        uses: actions/checkout@v2
      -
        name: Docker meta
        id: meta
        uses: docker/metadata-action@v3
        with:
          # list of Docker images to use as base name for tags
          images: |
            ${{ github.repository }}
            ghcr.io/${{ github.repository }}
          # generate Docker tags based on the following events/attributes
          tags: |
            type=schedule
            type=ref,event=branch
            type=ref,event=pr
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=sha
      -
        name: Set up QEMU
        uses: docker/setup-qemu-action@v1
      -
        name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      -
        name: Login to DockerHub
        uses: docker/login-action@v1 
        with:
          #username: ${{ secrets.DOCKERHUB_USERNAME }}
          username: ${{ github.repository_owner }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      -
        name: Login to GitHub Container Registry
        uses: docker/login-action@v1 
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      -
        run: echo ${{ steps.meta.outputs }}
      -
        name: Build and push
        uses: docker/build-push-action@v2
        with:
          context: .
          #platforms: linux/amd64,linux/arm64
          # push: true
          # tags: |
          #   user/app:latest
          #   user/app:1.0.0
          #   ghcr.io/user/app:latest
          #   ghcr.io/user/app:1.0.0
      # -
      #   name: Build and push
      #   uses: docker/build-push-action@v2
      #   with:
      #     context: .
      #     push: ${{ github.event_name != 'pull_request' }}
      #     tags: ${{ steps.meta.outputs.tags }}
      #     labels: ${{ steps.meta.outputs.labels }}